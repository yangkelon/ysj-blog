{"version":3,"file":"js/643.8ce43e2c.js","mappings":"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","sources":["webpack://YSJ'blog/./node_modules/markdown-it-emoji/lib/data/shortcuts.js","webpack://YSJ'blog/./node_modules/markdown-it-emoji/lib/normalize_opts.js","webpack://YSJ'blog/./node_modules/markdown-it-emoji/lib/render.js","webpack://YSJ'blog/./node_modules/markdown-it-emoji/lib/replace.js","webpack://YSJ'blog/./node_modules/prismjs/prism.js"],"sourcesContent":["// Emoticons -> Emoji mapping.\n//\n// (!) Some patterns skipped, to avoid collisions\n// without increase matcher complicity. Than can change in future.\n//\n// Places to look for more emoticons info:\n//\n// - http://en.wikipedia.org/wiki/List_of_emoticons#Western\n// - https://github.com/wooorm/emoticon/blob/master/Support.md\n// - http://factoryjoe.com/projects/emoticons/\n//\n'use strict';\n\nmodule.exports = {\n  angry:            [ '>:(', '>:-(' ],\n  blush:            [ ':\")', ':-\")' ],\n  broken_heart:     [ '</3', '<\\\\3' ],\n  // :\\ and :-\\ not used because of conflict with markdown escaping\n  confused:         [ ':/', ':-/' ], // twemoji shows question\n  cry:              [ \":'(\", \":'-(\", ':,(', ':,-(' ],\n  frowning:         [ ':(', ':-(' ],\n  heart:            [ '<3' ],\n  imp:              [ ']:(', ']:-(' ],\n  innocent:         [ 'o:)', 'O:)', 'o:-)', 'O:-)', '0:)', '0:-)' ],\n  joy:              [ \":')\", \":'-)\", ':,)', ':,-)', \":'D\", \":'-D\", ':,D', ':,-D' ],\n  kissing:          [ ':*', ':-*' ],\n  laughing:         [ 'x-)', 'X-)' ],\n  neutral_face:     [ ':|', ':-|' ],\n  open_mouth:       [ ':o', ':-o', ':O', ':-O' ],\n  rage:             [ ':@', ':-@' ],\n  smile:            [ ':D', ':-D' ],\n  smiley:           [ ':)', ':-)' ],\n  smiling_imp:      [ ']:)', ']:-)' ],\n  sob:              [ \":,'(\", \":,'-(\", ';(', ';-(' ],\n  stuck_out_tongue: [ ':P', ':-P' ],\n  sunglasses:       [ '8-)', 'B-)' ],\n  sweat:            [ ',:(', ',:-(' ],\n  sweat_smile:      [ ',:)', ',:-)' ],\n  unamused:         [ ':s', ':-S', ':z', ':-Z', ':$', ':-$' ],\n  wink:             [ ';)', ';-)' ]\n};\n","// Convert input options to more useable format\n// and compile search regexp\n\n'use strict';\n\n\nfunction quoteRE(str) {\n  return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&');\n}\n\n\nmodule.exports = function normalize_opts(options) {\n  var emojies = options.defs,\n      shortcuts;\n\n  // Filter emojies by whitelist, if needed\n  if (options.enabled.length) {\n    emojies = Object.keys(emojies).reduce(function (acc, key) {\n      if (options.enabled.indexOf(key) >= 0) {\n        acc[key] = emojies[key];\n      }\n      return acc;\n    }, {});\n  }\n\n  // Flatten shortcuts to simple object: { alias: emoji_name }\n  shortcuts = Object.keys(options.shortcuts).reduce(function (acc, key) {\n    // Skip aliases for filtered emojies, to reduce regexp\n    if (!emojies[key]) { return acc; }\n\n    if (Array.isArray(options.shortcuts[key])) {\n      options.shortcuts[key].forEach(function (alias) {\n        acc[alias] = key;\n      });\n      return acc;\n    }\n\n    acc[options.shortcuts[key]] = key;\n    return acc;\n  }, {});\n\n  // Compile regexp\n  var names = Object.keys(emojies)\n                .map(function (name) { return ':' + name + ':'; })\n                .concat(Object.keys(shortcuts))\n                .sort()\n                .reverse()\n                .map(function (name) { return quoteRE(name); })\n                .join('|');\n  var scanRE = RegExp(names);\n  var replaceRE = RegExp(names, 'g');\n\n  return {\n    defs: emojies,\n    shortcuts: shortcuts,\n    scanRE: scanRE,\n    replaceRE: replaceRE\n  };\n};\n","'use strict';\n\nmodule.exports = function emoji_html(tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n","// Emojies & shortcuts replacement logic.\n//\n// Note: In theory, it could be faster to parse :smile: in inline chain and\n// leave only shortcuts here. But, who care...\n//\n\n'use strict';\n\n\nmodule.exports = function create_rule(md, emojies, shortcuts, scanRE, replaceRE) {\n  var arrayReplaceAt = md.utils.arrayReplaceAt,\n      ucm = md.utils.lib.ucmicro,\n      ZPCc = new RegExp([ ucm.Z.source, ucm.P.source, ucm.Cc.source ].join('|'));\n\n  function splitTextToken(text, level, Token) {\n    var token, last_pos = 0, nodes = [];\n\n    text.replace(replaceRE, function (match, offset, src) {\n      var emoji_name;\n      // Validate emoji name\n      if (shortcuts.hasOwnProperty(match)) {\n        // replace shortcut with full name\n        emoji_name = shortcuts[match];\n\n        // Don't allow letters before any shortcut (as in no \":/\" in http://)\n        if (offset > 0 && !ZPCc.test(src[offset - 1])) {\n          return;\n        }\n\n        // Don't allow letters after any shortcut\n        if (offset + match.length < src.length && !ZPCc.test(src[offset + match.length])) {\n          return;\n        }\n      } else {\n        emoji_name = match.slice(1, -1);\n      }\n\n      // Add new tokens to pending list\n      if (offset > last_pos) {\n        token         = new Token('text', '', 0);\n        token.content = text.slice(last_pos, offset);\n        nodes.push(token);\n      }\n\n      token         = new Token('emoji', '', 0);\n      token.markup  = emoji_name;\n      token.content = emojies[emoji_name];\n      nodes.push(token);\n\n      last_pos = offset + match.length;\n    });\n\n    if (last_pos < text.length) {\n      token         = new Token('text', '', 0);\n      token.content = text.slice(last_pos);\n      nodes.push(token);\n    }\n\n    return nodes;\n  }\n\n  return function emoji_replace(state) {\n    var i, j, l, tokens, token,\n        blockTokens = state.tokens,\n        autolinkLevel = 0;\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      // Use reversed logic in links start/end match\n      for (i = tokens.length - 1; i >= 0; i--) {\n        token = tokens[i];\n\n        if (token.type === 'link_open' || token.type === 'link_close') {\n          if (token.info === 'auto') { autolinkLevel -= token.nesting; }\n        }\n\n        if (token.type === 'text' && autolinkLevel === 0 && scanRE.test(token.content)) {\n          // replace current node\n          blockTokens[j].children = tokens = arrayReplaceAt(\n            tokens, i, splitTextToken(token.content, token.level, state.Token)\n          );\n        }\n      }\n    }\n  };\n};\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n"],"names":["module","exports","angry","blush","broken_heart","confused","cry","frowning","heart","imp","innocent","joy","kissing","laughing","neutral_face","open_mouth","rage","smile","smiley","smiling_imp","sob","stuck_out_tongue","sunglasses","sweat","sweat_smile","unamused","wink","quoteRE","str","replace","options","shortcuts","emojies","defs","enabled","length","Object","keys","reduce","acc","key","indexOf","Array","isArray","forEach","alias","names","map","name","concat","sort","reverse","join","scanRE","RegExp","replaceRE","tokens","idx","content","require","md","arrayReplaceAt","utils","ucm","lib","ucmicro","ZPCc","Z","source","P","Cc","splitTextToken","text","level","Token","token","last_pos","nodes","match","offset","src","emoji_name","hasOwnProperty","test","slice","push","markup","state","i","j","l","blockTokens","autolinkLevel","type","children","info","nesting","_self","window","WorkerGlobalScope","self","Prism","lang","uniqueId","plainTextGrammar","_","manual","disableWorkerMessageHandler","util","encode","o","prototype","toString","call","objId","obj","defineProperty","value","clone","deepClone","visited","id","v","getLanguage","element","m","exec","className","toLowerCase","parentElement","setLanguage","language","classList","add","currentScript","document","Error","err","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","contains","languages","plain","plaintext","txt","extend","redef","insertBefore","inside","before","insert","root","grammar","ret","newToken","old","DFS","this","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","apply","querySelectorAll","highlightElement","parent","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","hasAttribute","setAttribute","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","toArray","all","callbacks","matchedStr","matchPattern","pattern","pos","lookbehind","lastIndex","lookbehindLength","index","startNode","startPos","rematch","patterns","cause","patternObj","greedy","global","flags","currentNode","next","tail","reach","removeCount","from","to","p","k","matchStr","after","removeFrom","prev","removeRange","wrapped","nestedRematch","list","node","newNode","count","array","s","e","tag","classes","attributes","aliases","addEventListener","message","parse","close","script","highlightAutomaticallyCallback","readyState","defer","requestAnimationFrame","setTimeout","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","string","css","addInlined","addAttribute","clike","javascript","regex","js","Element","matches","msMatchesSelector","webkitMatchesSelector","LOADING_MESSAGE","FAILURE_MESSAGE","status","FAILURE_EMPTY_MESSAGE","EXTENSIONS","STATUS_ATTR","STATUS_LOADING","STATUS_LOADED","STATUS_FAILED","SELECTOR","pre","appendChild","createElement","getAttribute","extension","autoloader","loadLanguages","loadFile","range","parseRange","lines","split","start","end","Math","max","min","String","error","fileHighlight","logged","console","warn","arguments","success","xhr","XMLHttpRequest","open","onreadystatechange","responseText","statusText","send","Number","comma","undefined"],"sourceRoot":""}